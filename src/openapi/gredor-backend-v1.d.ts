/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/bankid/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cancel */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CancelRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bankid/init": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth Init */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: {
                    personalNumber?: string | null;
                    token?: string | null;
                };
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["AuthInitRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BankIdStatusResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bankid/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth Status */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["AuthStatusRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BankIdStatusResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/information/records/{orgnr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Records */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orgnr: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RecordsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/submission-flow/prepare": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Prepare */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: {
                    personalNumber?: string | null;
                };
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PreparationRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PreparationResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/submission-flow/submit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Submit */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: {
                    personalNumber?: string | null;
                };
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SubmissionRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InlamningOK"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/submission-flow/validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Validate */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: {
                    personalNumber?: string | null;
                };
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ValidationRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KontrolleraSvar"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AuthInitRequest: {
            personalNumber: string;
        };
        /** @enum {string} */
        AuthStatus: "PENDING" | "COMPLETE" | "FAILED";
        AuthStatusRequest: {
            orderRef: string;
        };
        BankIdStatusResponse: {
            orderRef?: string | null;
            autoStartToken?: string | null;
            status: components["schemas"]["AuthStatus"];
            statusPendingData?: components["schemas"]["StatusPendingData"] | null;
            statusCompleteData?: components["schemas"]["StatusCompleteData"] | null;
            statusFailedData?: components["schemas"]["StatusFailedData"] | null;
        };
        CancelRequest: {
            orderRef: string;
        };
        Handlingsinfo: {
            typ?: components["schemas"]["TypEnum1"];
            /** Format: int32 */
            dokumentlangd?: number;
            idnummer?: string;
            /** Format: binary */
            sha256checksumma?: string;
        };
        InlamningOK: {
            orgnr?: string;
            avsandare?: string;
            undertecknare?: string;
            handlingsinfo?: components["schemas"]["Handlingsinfo"];
            url?: string;
        };
        KontrolleraSvar: {
            orgnr?: string;
            utfall?: components["schemas"]["KontrolleraUtfall"][];
        };
        KontrolleraUtfall: {
            kod?: string;
            text?: string;
            typ?: components["schemas"]["TypEnum"];
            tekniskinformation?: components["schemas"]["KontrolleraUtfallTekniskInformation"][];
        };
        KontrolleraUtfallTekniskInformation: {
            meddelande?: string;
            element?: string;
            varde?: string;
        };
        /** @enum {string} */
        KravPaRevisionsberattelseEnum: "ja" | "nej" | "uppgift_saknas";
        /** Format: date */
        LocalDate: string;
        PreparationRequest: {
            foretagOrgnr: string;
        };
        PreparationResponse: {
            avtalstext: string;
            avtalstextAndrad: components["schemas"]["LocalDate"];
        };
        Rakenskapsperiod: {
            from?: components["schemas"]["LocalDate"];
            tom?: components["schemas"]["LocalDate"];
            kravPaRevisionsberattelse?: components["schemas"]["KravPaRevisionsberattelseEnum"];
            revisorsplikt?: components["schemas"]["RevisorspliktEnum"];
        };
        RecordsResponse: {
            foretagsnamn: string;
            rakenskapsperioder: components["schemas"]["Rakenskapsperiod"][];
        };
        /** @enum {string} */
        RevisorspliktEnum: "ja" | "nej" | "uppgift_saknas";
        StatusCompleteData: {
            personalNumber: string;
            token: string;
        };
        StatusFailedData: {
            hintCode?: string | null;
        };
        StatusPendingData: {
            qrCodeImageBase64: string;
            hintCode?: string | null;
        };
        SubmissionRequest: {
            foretagOrgnr: string;
            /** Format: binary */
            ixbrl: string;
            aviseringEpost: string;
        };
        /** @enum {string} */
        TypEnum: "info" | "warn" | "error";
        /** @enum {string} */
        TypEnum1: "arsredovisning_komplett" | "arsredovisning_kompletteras" | "revisionsberattelse";
        ValidationRequest: {
            foretagOrgnr: string;
            /** Format: binary */
            ixbrl: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
